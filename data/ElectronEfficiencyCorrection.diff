Index: Root/AsgElectronEfficiencyCorrectionTool.cxx
===================================================================
--- Root/AsgElectronEfficiencyCorrectionTool.cxx	(revision 650808)
+++ Root/AsgElectronEfficiencyCorrectionTool.cxx	(working copy)
@@ -278,6 +278,34 @@
   return  CP::CorrectionCode::Ok;
 }
 
+CP::CorrectionCode AsgElectronEfficiencyCorrectionTool::applyEfficiencyScaleFactorConst(const xAOD::Electron& inputObject) const {
+  static SG::AuxElement::Decorator<float> dec (m_resultPrefix+m_resultName+"SF");
+  Root::TResult m_result = calculate(&inputObject);
+  if( &appliedSystematics()==0 ) {
+    dec(inputObject) = m_result.getScaleFactor();
+    return CP::CorrectionCode::Ok;
+  }
+  //Get the result + all of the uncertainties. These will be zero until applySystematicVariation() is called.
+  double m_sys_Uncorr(0);
+  double m_sys_Corr(0);
+  if( appliedSystematics().matchSystematic(CP::SystematicVariation("EL_EFF_UncorrUncertainty", 1)) ){
+    m_sys_Uncorr = m_result.getResult(4);
+  }
+  if( appliedSystematics().matchSystematic(CP::SystematicVariation("EL_EFF_UncorrUncertainty", -1)) ){
+    m_sys_Uncorr = -1*m_result.getResult(4);
+  }
+  if( appliedSystematics().matchSystematic(CP::SystematicVariation("EL_EFF_CorrUncertainty", 1)) ){
+    m_sys_Corr = m_result.getResult(5);
+  }
+  if( appliedSystematics().matchSystematic(CP::SystematicVariation("EL_EFF_CorrUncertainty", -1)) ){
+    m_sys_Corr = -1*m_result.getResult(5);
+  }
+
+  dec(inputObject) = m_result.getScaleFactor() + m_sys_Uncorr +  m_sys_Corr;
+  return  CP::CorrectionCode::Ok;
+}
+
+
 //=======================================================================
 //   Systematics Interface
 //=======================================================================
Index: ElectronEfficiencyCorrection/AsgElectronEfficiencyCorrectionTool.h
===================================================================
--- ElectronEfficiencyCorrection/AsgElectronEfficiencyCorrectionTool.h	(revision 650808)
+++ ElectronEfficiencyCorrection/AsgElectronEfficiencyCorrectionTool.h	(working copy)
@@ -65,8 +65,8 @@
 
   CP::CorrectionCode applyEfficiencyScaleFactor(xAOD::Electron& inputObject) const;
 
+  CP::CorrectionCode applyEfficiencyScaleFactorConst(const xAOD::Electron& inputObject) const;
 
-
   /// returns: whether this tool is affected by the given systematis
   virtual bool isAffectedBySystematic( const CP::SystematicVariation& systematic ) const ;
   
